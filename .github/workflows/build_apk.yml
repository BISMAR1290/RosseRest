name: Build APK with Buildozer on: push: branches: [ main ] jobs: build: runs-on: ubuntu-latest timeout-minutes: 30 # Aumenta el tiempo de espera steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 # Necesario para clones completos - name: Clean previous builds run: | rm -rf .buildozer rm -f *.spec - name: Set up Python 3.10 uses: actions/setup-python@v4 with: python-version: '3.10' - name: Install system dependencies run: | sudo apt update sudo apt install -y \ build-essential \ ccache \ git \ zip \ unzip \ openjdk-17-jdk \ python3-pip \ libssl-dev \ curl \ zlib1g-dev \ libncurses5-dev \ libffi-dev \ libxml2-dev \ libxslt1-dev pip install --upgrade pip wheel setuptools pip install buildozer cython==0.29.36 virtualenv - name: Install Android SDK run: | mkdir -p $HOME/android-sdk curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip unzip sdk.zip -d $HOME/android-sdk/cmdline-tools mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk \ "platform-tools" \ "platforms;android-33" \ "build-tools;34.0.0" \ "ndk;25.2.9519653" \ "cmake;3.22.1" echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV echo "PATH=$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/34.0.0:$HOME/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV - name: Initialize Buildozer run: | buildozer init buildozer android clean # Configuración crítica sed -i 's/#android.accept_sdk_license = False/android.accept_sdk_license = True/' buildozer.spec sed -i "s|#android.sdk_path =|android.sdk_path = $HOME/android-sdk|" buildozer.spec sed -i "s|#android.ndk_path =|android.ndk_path = $HOME/android-sdk/ndk/25.2.9519653|" buildozer.spec sed -i 's/#android.p4a_dir = .*/android.p4a_dir = $HOME\/.local\/share\/python-for-android/' buildozer.spec - name: Build APK (with retry) run: | # Primero actualizamos p4a pip install --upgrade python-for-android # Luego construimos con reintentos for i in 1 2 3; do if buildozer -v android debug 2>&1 | tee build.log; then break fi echo "Intento $i fallido, reintentando..." sleep 10 done # Verificar errores críticos if grep -q "FileNotFoundError" build.log; then echo "Error crítico encontrado" exit 1 fi - name: Upload APK if: success() uses: actions/upload-artifact@v4 with: name: app-debug.apk path: bin/*.apk - name: Upload logs if: failure() uses: actions/upload-artifact@v4 with: name: build-logs path: | build.log .buildozer/android/platform/build-*/build.log
